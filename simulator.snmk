if 'outdir' not in config:
    config['outdir'] = 'output'

rule all:
    input:
        '{outdir}/{name_tag}.pred_expr.txt'.format(**config)

rule all_simulate:
    input:
        '{outdir}/{name_tag}.simulated_phenotype.{beta_dist}_x_pve{pve}.txt'.format(**config),
        '{outdir}/{name_tag}.simulated_gene_effect.{beta_dist}_x_pve{pve}.txt'.format(**config)

rule pred_expr:
    input:
        geno = config['genotype_vcf'],
        db = config['predictdb'],
        var_map = config['variant_map']
    output:
        result = '{outdir}/{name_tag}.pred_expr.txt',
        summary = '{outdir}/{name_tag}.summary.txt'
    shell:
        'python {config[predict_script]} \
            --model_db_path {input.db} \
            --vcf_genotypes {input.geno} \
            --vcf_mode genotyped \
            --variant_mapping {input.var_map} id rsid \
            --on_the_fly_mapping METADATA "chr{{}}_{{}}_{{}}_{{}}_b38" \
            --prediction_output {output.result} \
            --prediction_summary_output {output.summary} \
            --verbosity 9 \
            --throw'
        
rule simulate:
    input:
        pred_expr = '{outdir}/{name_tag}.pred_expr.txt'
    output:
        '{outdir}/{name_tag}.simulated_phenotype.{mode}_x_pve{pve}.txt',
        '{outdir}/{name_tag}.simulated_gene_effect.{mode}_x_pve{pve}.txt'
    shell:
        'Rscript predixcan_simulator.R \
            --pred_expr {input.pred_expr} \
            --pve {wildcards.pve} \
            --beta_dist {wildcards.mode} \
            --output {output[0]} \
            --output_beta {output[1]}'
            
